// <auto-generated />
using System;
using HistoricalStore.Data.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HistoricalStore.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20241208144615_UpdateModelsVer1.1")]
    partial class UpdateModelsVer11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HistoricalPeriodProduct", b =>
                {
                    b.Property<int>("HistoricalPeriodsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("HistoricalPeriodsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("HistoricalPeriodProduct");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.OrderModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.OrderModels.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.OrderModels.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ожидание"
                        },
                        new
                        {
                            Id = 2,
                            Name = "В процессе"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Отправлено"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Доставлено"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Отменено"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Оружие"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Доспехи"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Одежда"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Книги"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Аксессуары"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Сувениры"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.HistoricalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistoricalPeriods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Древний мир"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Античность"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Средневековье"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Эпоха возрождения"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Новое время"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Кованая сталь, используется для оружия и доспехов.",
                            Name = "Сталь"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Чугун, гладкое железо, использовались в производстве оружия.",
                            Name = "Железо"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Латунь и бронзовые сплавы использовались для оружия и украшений.",
                            Name = "Бронза"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Медь, использовалась в старинных оружиях и декоративных предметах.",
                            Name = "Медь"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ценный металл, использовался для украшений и монет.",
                            Name = "Золото"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Применялось в украшениях и декоративных предметах.",
                            Name = "Серебро"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Используется в современном оружии и доспехах.",
                            Name = "Титан"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Сплавляется для использования в различных оружейных изделиях.",
                            Name = "Молибден"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Применяется в различных металлических сплавах и покрытиях.",
                            Name = "Цинк"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Используется в легких оружиях и доспехах.",
                            Name = "Алюминий"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Ценный металл, используется в украшениях.",
                            Name = "Платина"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Реже используется в ювелирных изделиях.",
                            Name = "Родий"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Драгоценный камень, использовался для украшений.",
                            Name = "Рубин"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Применяется в украшениях и декоративных элементах.",
                            Name = "Сапфир"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Драгоценный камень, используемый в ювелирных украшениях.",
                            Name = "Изумруд"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Ценный камень, использовался в орнаментах и украшениях.",
                            Name = "Алмаз"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Полудрагоценный камень, использовался в украшениях.",
                            Name = "Турмалин"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Драгоценный камень, применялся для ювелирных украшений.",
                            Name = "Лазурит"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Твердое дерево, использовалось в оружии и мебели.",
                            Name = "Дуб"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Древесина, применялась для мебели и аксессуаров.",
                            Name = "Орех"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Древесина для отделки мебели и декоративных изделий.",
                            Name = "Клен"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Используется для мебели и изделий для наружного применения.",
                            Name = "Лиственница"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Ценный вид древесины, используемый в мебели и аксессуарах.",
                            Name = "Махагон"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Твердое дерево, использовалось для производства мебели.",
                            Name = "Вишня"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Тик использовался в производстве мебели и для декоративных изделий.",
                            Name = "Тик"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Используется в производстве мебели и элементов интерьера.",
                            Name = "Кедр"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Шерстяные ткани использовались для производства одежды.",
                            Name = "Шерсть"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Льняные ткани использовались для одежды и тканей.",
                            Name = "Лён"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Ценный материал для тканей и аксессуаров.",
                            Name = "Шелк"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Шерсть для одежды и тканей, использовалась для одежды.",
                            Name = "Барс"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Мягкая шерсть, использовалась для тканей.",
                            Name = "Кашемир"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Деним использовался для одежды, в частности для джинсов.",
                            Name = "Деним"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Современный синтетический материал, использующийся в одежде и аксессуарах.",
                            Name = "Полиэстер"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Современный синтетический материал для декоративных элементов и сувениров.",
                            Name = "Пластик"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Используется для различных декоративных предметов.",
                            Name = "Стекло"
                        },
                        new
                        {
                            Id = 36,
                            Description = "Керамика, используемая для посуды и сувениров.",
                            Name = "Фарфор"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Используются в украшениях и аксессуарах.",
                            Name = "Перья"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Используется для создания украшений и декоративных элементов.",
                            Name = "Рог"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Использовались для украшений и декоративных элементов.",
                            Name = "Кости"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Полудрагоценный камень, применяющийся для украшений.",
                            Name = "Гранат"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Используется для украшений и декоративных элементов.",
                            Name = "Коралл"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Камень, использующийся в строительстве и для декоративных элементов.",
                            Name = "Песчаник"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Используется для создания декоративных элементов и статуй.",
                            Name = "Гипс"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Применяются для создания посуды и декоративных элементов.",
                            Name = "Глиняные материалы"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Применяется в архитектуре, статуях и декоративных элементах.",
                            Name = "Мрамор"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.AccessoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessoryTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Кулоны"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Броши"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Перстни"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Диадемы"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Тиары"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Бусы"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Серьги"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Браслеты"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Обручи"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Венцы"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Шляпы"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Повязки на голову"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Вуали"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Маски"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Пояса"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Военные пояса"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Портупеи"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Церемониальные ремни"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Сумки через плечо"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Походные мешки"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Саквояжи"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Кошельки"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Сапоги"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Сандалии"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Калиги"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Башмаки"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Гетры"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Платки"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Горжетки"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Накидки"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Веера"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Зонты"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Табакерки"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Лорнеты"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Чётки"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Кинжалы"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Палаши"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Церемониальные мечи"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Орденские знаки"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Амулеты"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Тотемы"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Ключи"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Колокольчики"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Золотые цепи"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.ArmorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArmorTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Латы"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Кираса"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Кольчуга"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Панцирь"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Нагрудники"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Шлемы"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Маски"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Наплечники"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Наручи"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Рукавицы"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Набедренники"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Коленные щитки"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Наголенники"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Сапоги"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Самурайские доспехи"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Индийские ламеллярные доспехи"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.ClothingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClothingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClothingTypeId");

                    b.ToTable("ClothingType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Туники"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Тоги"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Хитоны"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Гиматии"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Каунаки"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Пеплос"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Сюрко"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Камизы"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Гамбезоны"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Дублеты"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Кафтан"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Хауберк"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Капюшоны"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Мантии"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Жупан"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Хосы"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Камзолы"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Бри"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Лифы"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Панталоны"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Плащи"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Береты"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Кимоно"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Хакама"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Ханьфу"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Сарис"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Тюбетейки"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Чжуншаньчжуань"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Пончо"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Сомбреро"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Пальто-трико"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Рубашки с жабо"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Корсеты"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Монашеские одеяния"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Рабочая одежда"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Военная форма"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Торговые одеяния"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Одежда фараонов"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Жреческие одежды"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Императорские мантии"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Королевские одежды"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Духовные ризы"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.SouvenirType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SouvenirTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Миниатюрные модели оружия"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Миниатюрные модели доспехов"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Модели щитов"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Реплики карт"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Исторические книги"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Реплики монет"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Памятные медали"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Реплики статуй"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Реплики сосудов"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Реплики мебели"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Кухонные принадлежности"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Реплики тканей"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Гобелены"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Реплики старинных часов"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Антикварные механизмы"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Ювелирные украшения"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.WeaponType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeaponTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Мечи"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Кинжалы"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Топоры"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Булавы"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Копья"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Алебарды"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Луки"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Арбалеты"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Дротики"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Мушкеты"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Пистолеты"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Ружья"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Катаны"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Чакрамы"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Нунчаки"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.UserModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Администратор"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Менеджер"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Клиент"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Гость"
                        });
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.UserModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MaterialProduct", b =>
                {
                    b.Property<int>("MaterialsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("MaterialsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("MaterialProduct");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Accessory", b =>
                {
                    b.HasBaseType("HistoricalStore.Data.Models.ProductModels.Product");

                    b.Property<int>("AccessoryTypeId")
                        .HasColumnType("int");

                    b.HasIndex("AccessoryTypeId");

                    b.ToTable("Accessories", (string)null);
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Armor", b =>
                {
                    b.HasBaseType("HistoricalStore.Data.Models.ProductModels.Product");

                    b.Property<int>("ArmorTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasIndex("ArmorTypeId");

                    b.ToTable("Armors", (string)null);
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Book", b =>
                {
                    b.HasBaseType("HistoricalStore.Data.Models.ProductModels.Product");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Clothing", b =>
                {
                    b.HasBaseType("HistoricalStore.Data.Models.ProductModels.Product");

                    b.Property<int>("ClothingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FabricType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Clothings", (string)null);
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Souvenir", b =>
                {
                    b.HasBaseType("HistoricalStore.Data.Models.ProductModels.Product");

                    b.Property<int>("SouvenirTypeId")
                        .HasColumnType("int");

                    b.HasIndex("SouvenirTypeId");

                    b.ToTable("Souvenirs", (string)null);
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Weapon", b =>
                {
                    b.HasBaseType("HistoricalStore.Data.Models.ProductModels.Product");

                    b.Property<bool>("IsSharp")
                        .HasColumnType("bit");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<int>("WeaponTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasIndex("WeaponTypeId");

                    b.ToTable("Weapons", (string)null);
                });

            modelBuilder.Entity("HistoricalPeriodProduct", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.HistoricalPeriod", null)
                        .WithMany()
                        .HasForeignKey("HistoricalPeriodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.OrderModels.Order", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.OrderModels.OrderStatus", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.UserModels.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.OrderModels.OrderItem", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.OrderModels.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Product", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.ClothingType", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.Types.ClothingType", null)
                        .WithMany("ClothingTypes")
                        .HasForeignKey("ClothingTypeId");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.UserModels.User", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.UserModels.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaterialProduct", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Accessory", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.Types.AccessoryType", null)
                        .WithMany("Accessories")
                        .HasForeignKey("AccessoryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithOne()
                        .HasForeignKey("HistoricalStore.Data.Models.ProductModels.Accessory", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Armor", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.Types.ArmorType", null)
                        .WithMany("Armors")
                        .HasForeignKey("ArmorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithOne()
                        .HasForeignKey("HistoricalStore.Data.Models.ProductModels.Armor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Book", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithOne()
                        .HasForeignKey("HistoricalStore.Data.Models.ProductModels.Book", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Clothing", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithOne()
                        .HasForeignKey("HistoricalStore.Data.Models.ProductModels.Clothing", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Souvenir", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithOne()
                        .HasForeignKey("HistoricalStore.Data.Models.ProductModels.Souvenir", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.Types.SouvenirType", null)
                        .WithMany("Souvenirs")
                        .HasForeignKey("SouvenirTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.ProductModels.Weapon", b =>
                {
                    b.HasOne("HistoricalStore.Data.Models.ProductModels.Product", null)
                        .WithOne()
                        .HasForeignKey("HistoricalStore.Data.Models.ProductModels.Weapon", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoricalStore.Data.Models.SupplyModels.Types.WeaponType", null)
                        .WithMany("Weapons")
                        .HasForeignKey("WeaponTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.OrderModels.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.OrderModels.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.AccessoryType", b =>
                {
                    b.Navigation("Accessories");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.ArmorType", b =>
                {
                    b.Navigation("Armors");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.ClothingType", b =>
                {
                    b.Navigation("ClothingTypes");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.SouvenirType", b =>
                {
                    b.Navigation("Souvenirs");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.SupplyModels.Types.WeaponType", b =>
                {
                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.UserModels.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HistoricalStore.Data.Models.UserModels.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
